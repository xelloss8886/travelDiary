<?xml version="1.0" encoding="UTF-8"?>
<!-- 30초마다 설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다 -->
<configuration scan="true" scanPeriod="30 seconds">

    <property name="LOGS_ABSOLUTE_PATH" value="./logs" />
    <!-- 외부 설정파일을 사용할 수 있다. -->
    <!-- <property resource="resource.properties"/> -->

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>  [%d{HH:mm:ss.SSS}] [%-5level] %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <encoder>
            <pattern> [%d{HH:mm:ss.SSS}] [%-5level] [%logger{36}] %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_ABSOLUTE_PATH}/paymentGateway-${peer.name}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 100MB -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <logger name="org.springframework" level="info" />
    <logger name="org.hibernate" level="info" />
    <logger name="org.apache.http.wire" level="info" />
    <logger name="org.apache.http.impl.conn" level="info" />
    <logger name="org.apache.http.impl.nio.conn" level="info" />
    <logger name="org.apache.http.impl.client" level="info" />
    <logger name="org.apache.parquet" level="warn" />
    <logger name="org.apache.parquet.hadoop" level="warn" />
    <!-- 설정파일에 RUN_MODE 가 SERVICE로 정의되어 있으면 로깅 레벨을 INFO로 지정 -->
    <root level="info">
        <appender-ref ref="STDOUT" />
    </root>
</configuration>
